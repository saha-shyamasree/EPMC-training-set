<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName A++V2.4.dtd?><?SourceDTD.Version 2.4?><?ConverterInfo.XSLTName springer2nlmx2.xsl?><?ConverterInfo.Version 2?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id><journal-title-group><journal-title>BMC Bioinformatics</journal-title></journal-title-group><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">4384350</article-id><article-id pub-id-type="pmid">25627244</article-id><article-id pub-id-type="publisher-id">451</article-id><article-id pub-id-type="doi">10.1186/s12859-015-0451-1</article-id><article-categories><subj-group subj-group-type="heading"><subject>Methodology Article</subject></subj-group></article-categories><title-group><article-title><SecTag type="TITLE"><text><SENT sid="0" pm="."><plain>An algorithm to enumerate all possible protein conformations verifying a set of distance constraints </plain></SENT>
</text></SecTag></article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Cassioli</surname><given-names>Andrea</given-names></name><address><email>cassioliandre@gmail.com</email></address><xref ref-type="aff" rid="Aff4">4</xref></contrib><contrib contrib-type="author"><name><surname>Bardiaux</surname><given-names>Benjamin</given-names></name><address><email>benjamin.bardiaux@pasteur.fr</email></address><xref ref-type="aff" rid="Aff1">1</xref><xref ref-type="aff" rid="Aff2">2</xref></contrib><contrib contrib-type="author"><name><surname>Bouvier</surname><given-names>Guillaume</given-names></name><address><email>guillaume.bouvier@pasteur.fr</email></address><xref ref-type="aff" rid="Aff1">1</xref><xref ref-type="aff" rid="Aff2">2</xref></contrib><contrib contrib-type="author"><name><surname>Mucherino</surname><given-names>Antonio</given-names></name><address><email>antonio.mucherino@irisa.fr</email></address><xref ref-type="aff" rid="Aff6">6</xref></contrib><contrib contrib-type="author"><name><surname>Alves</surname><given-names>Rafael</given-names></name><address><email>rafaelsoalves@uol.com.br</email></address><xref ref-type="aff" rid="Aff4">4</xref></contrib><contrib contrib-type="author"><name><surname>Liberti</surname><given-names>Leo</given-names></name><address><email>liberti@lix.polytechnique.fr</email></address><xref ref-type="aff" rid="Aff4">4</xref><xref ref-type="aff" rid="Aff5">5</xref></contrib><contrib contrib-type="author"><name><surname>Nilges</surname><given-names>Michael</given-names></name><address><email>michael.nilges@pasteur.fr</email></address><xref ref-type="aff" rid="Aff1">1</xref><xref ref-type="aff" rid="Aff2">2</xref></contrib><contrib contrib-type="author"><name><surname>Lavor</surname><given-names>Carlile</given-names></name><address><email>clavor@ime.unicamp.br</email></address><xref ref-type="aff" rid="Aff3">3</xref></contrib><contrib contrib-type="author" corresp="yes"><name><surname>Malliavin</surname><given-names>Thérèse E</given-names></name><address><email>therese.malliavin@pasteur.fr</email></address><xref ref-type="aff" rid="Aff1">1</xref><xref ref-type="aff" rid="Aff2">2</xref></contrib><aff id="Aff1"><label>1</label>Institut Pasteur, Structural Bioinformatics Unit, 25, rue du Dr Roux, Paris, 75015 France </aff><aff id="Aff2"><label>2</label>CNRS UMR3528, 25, rue du Dr Roux, Paris, 75015 France </aff><aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0723 2494</institution-id><institution-id institution-id-type="GRID">grid.411087.b</institution-id><institution/><institution>University of Campinas (IMECC-UNICAMP), </institution></institution-wrap>Campinas-SP, 13083-859 Brasil </aff><aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ISNI">0000000121581279</institution-id><institution-id institution-id-type="GRID">grid.10877.39</institution-id><institution>LIX, </institution><institution>Ecole Polytechnique, </institution></institution-wrap>Palaiseau, 91128 France </aff><aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0400 2468</institution-id><institution-id institution-id-type="GRID">grid.410484.d</institution-id><institution/><institution>IBM TJ Watson Research Center, </institution></institution-wrap>NY Yorktown Heights, 10598 USA </aff><aff id="Aff6"><label>6</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2191 9284</institution-id><institution-id institution-id-type="GRID">grid.410368.8</institution-id><institution/><institution>Université de Rennes-I, </institution></institution-wrap>Rennes, France </aff></contrib-group><pub-date pub-type="epub"><day>28</day><month>1</month><year>2015</year></pub-date><pub-date pub-type="collection"><year>2015</year></pub-date><volume>16</volume><elocation-id>23</elocation-id><history><date date-type="received"><day>9</day><month>7</month><year>2014</year></date><date date-type="accepted"><day>5</day><month>1</month><year>2015</year></date></history><permissions><copyright-statement>© Cassioli et al.; licensee BioMed Central. 2015</copyright-statement><license license-type="open-access"><license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0">http://creativecommons.org/licenses/by/4.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly credited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p></license></permissions><abstract id="Abs1"><sec><title><text><SENT sid="1" pm="."><plain>Background </plain></SENT>
</text></title><p><SecTag type="ABS"><text><SENT sid="2" pm="."><plain>The determination of protein structures satisfying distance constraints is an important problem in structural biology. </plain></SENT>
<SENT sid="3" pm="."><plain>Whereas the most common method currently employed is simulated annealing, there have been other methods previously proposed in the literature. </plain></SENT>
<SENT sid="4" pm="."><plain>Most of them, however, are designed to find one solution only. </plain></SENT>
</text></SecTag></p></sec><sec><title><text><SENT sid="5" pm="."><plain>Results </plain></SENT>
</text></title><p><SecTag type="ABS"><text><SENT sid="6" pm="."><plain>In order to explore exhaustively the feasible conformational space, we propose here an interval Branch-and-Prune algorithm (iBP) to solve the Distance Geometry Problem (DGP) associated to protein structure determination. </plain></SENT>
<SENT sid="7" pm="."><plain>This algorithm is based on a discretization of the problem obtained by recursively constructing a search space having the structure of a tree, and by verifying whether the generated atomic positions are feasible or not by making use of pruning devices. </plain></SENT>
<SENT sid="8" pm="."><plain>The pruning devices used here are directly related to features of protein conformations. </plain></SENT>
</text></SecTag></p></sec><sec><title><text><SENT sid="9" pm="."><plain>Conclusions </plain></SENT>
</text></title><p><SecTag type="ABS"><text><SENT sid="10" pm="."><plain>We described the new algorithm iBP to generate protein conformations satisfying distance constraints, that would potentially allows a systematic exploration of the conformational space. </plain></SENT>
<SENT sid="11" pm="."><plain>The algorithm iBP has been applied on three α-helical peptides. </plain></SENT>
</text></SecTag></p></sec></abstract><SecTag type="KEYWORD"><kwd-group xml:lang="en"><title>Keywords</title><kwd>Distance geometry</kwd><kwd>Branch-and-prune algorithm</kwd><kwd>Molecular conformation</kwd><kwd>Protein structure</kwd><kwd>Nuclear magnetic resonance</kwd></kwd-group></SecTag><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>© The Author(s) 2015</meta-value></custom-meta></custom-meta-group></article-meta></front><body><SecTag type="INTRO"><sec id="Sec1"><title><text><SENT sid="12" pm="."><plain>Background </plain></SENT>
</text></title><p><text><SENT sid="13" pm="."><plain>Protein structure determination is crucial for understanding protein function, as it paves the way to the discovery of new chemical compounds and of new approaches to control the biological processes. </plain></SENT>
</text></p><p><text><SENT sid="14" pm="."><plain>The problem of protein structure determination is certainly a problem with multiple solutions, as proteins are flexible polymers. </plain></SENT>
<SENT sid="15" pm="."><plain>As most of the experimental techniques of the structural biology obtain measurements averaged on an ensemble of protein conformations, the usual approaches for structure determination intend to find an average structure or a set of conformations describing fluctuations around an average structure. </plain></SENT>
<SENT sid="16" pm="."><plain>A path intending to get a complete coverage of the conformational space, given a series of constraints, is usually not taken, although such an approach could provide precious information about the conformational equilibrium, which is essential in the function of many proteins, as the HIV protease [1]. </plain></SENT>
</text></p><p><text><SENT sid="17" pm="."><plain>An important class of experimental methods for protein structure determination is based on the measurement of inter-atomic distances and angles, such as Nuclear Magnetic Resonance (NMR) spectroscopy [2] and cross-linking coupled to mass spectrometry [3]. </plain></SENT>
<SENT sid="18" pm="."><plain>In NMR, distance intervals between hydrogens are determined from the measurement of nuclear Overhauser effects (NOE). </plain></SENT>
<SENT sid="19" pm="."><plain>The experimentally measured distances are then used as constraints for protein structure calculations. </plain></SENT>
<SENT sid="20" pm="."><plain>Pure in silico approaches have been also developed based on the use of inter-atomic distance constraints, such as homology modeling [4] or prediction of protein-protein complexes [5] and ligand poses [6]. </plain></SENT>
</text></p><p><text><SENT sid="21" pm="."><plain>The Distance Geometry Problem (DGP) [7,8] consists in identifying the sets of points which satisfy a set of constraints based on relative distances between some pairs of such points. </plain></SENT>
<SENT sid="22" pm="."><plain>The present work describes an algorithm developed to solve DGP in the context of protein structure determination: the points represent the protein atoms. </plain></SENT>
</text></p><p><text><SENT sid="23" pm="."><plain>The DGP is a constraint satisfaction problem. </plain></SENT>
<SENT sid="24" pm="."><plain>Several approaches solve this problem by reformulating it [8] as a global optimization problem having a continuous search domain, and whose objective function is generally a penalty function designed to measure the violation of the distance constraints. </plain></SENT>
<SENT sid="25" pm="."><plain>Over the years, the solution of DGPs arising in structural biology have been typically attempted by Simulated Annealing (SA) approaches based on molecular dynamics [9]. </plain></SENT>
<SENT sid="26" pm="."><plain>Other proposed approaches are based on various optimization methods as in [10]. </plain></SENT>
<SENT sid="27" pm="."><plain>As all meta-heuristic approaches, SA may provide approximate solutions but does not deliver optimality certificates. </plain></SENT>
<SENT sid="28" pm="."><plain>In the case of protein structure determination, since the optimization problem is a reformulation of a constraint satisfaction problem, solutions given by SA can be successively verified by checking the violations of the distance constraints. </plain></SENT>
<SENT sid="29" pm="."><plain>However, additional solutions may exist but go undetected by SA. </plain></SENT>
<SENT sid="30" pm="."><plain>Thus, an algorithm for the systematic enumeration of the possible conformations of a given protein could find a widespread field of application. </plain></SENT>
<SENT sid="31" pm="."><plain>Branch-and-prune algorithms and similar were proposed in the general context of protein structure determination [11-16], (see also [8] and references therein). </plain></SENT>
<SENT sid="32" pm="."><plain>However, these studies primarily addressed the question of defining relative orientations of protein monomers in symmetric oligomers, not the determination of all possible conformation of a polypeptide chain with a very large number of degrees of freedom from distance constraints. </plain></SENT>
<SENT sid="33" pm="."><plain>Systematic exploration was proved to be useful in the case of residual dipolar couplings (RDC) constraints [17], for exploring the sidechains conformations [18,19] and for assignment of NOEs, provided that the structure is known [20]. </plain></SENT>
<SENT sid="34" pm="."><plain>For the structure determination from RDCs, it has been shown [21] that when using RDCs but only sparse NOEs the problem can be solved in polynomial time. </plain></SENT>
<SENT sid="35" pm="."><plain>Such approaches have also been used for structure determination in X-ray crystallography for non-crystallographic symmetry by orienting and translating symmetric protein subunits [22]. </plain></SENT>
<SENT sid="36" pm="."><plain>To the best of our knowledge, in this paper we present the first application of a Branch-and-Prune algorithm to the problem of full protein structure determination based on unambiguous distance information. </plain></SENT>
</text></p><p><text><SENT sid="37" pm="."><plain>Under certain conditions, DGPs can be discretized [23] (see below), which means that the search domain for the corresponding optimization problem can be reduced to a discrete set, which has the structure of a tree. </plain></SENT>
<SENT sid="38" pm="."><plain>The discretization makes the enumeration of the entire solution set of DGP instances possible. </plain></SENT>
<SENT sid="39" pm="."><plain>This is important when the experimental constraints do not specify the protein conformation uniquely, i.e., more than one conformation satisfies all constraints. </plain></SENT>
<SENT sid="40" pm="."><plain>For solving discretized DGP, we employ an interval branch-and-prune (iBP) algorithm [24], which is based on the idea of recursively exploring the tree while generating new candidate atomic positions (branching phase) and to verify the feasibility of such positions (pruning phase) (Figure 1). </plain></SENT>
<SENT sid="41" pm="."><plain>By making use of pruning devices, branches rooted at infeasible positions can be discarded from the tree, so that the search can be reduced to the feasible parts of the tree (Figure 2). </plain></SENT>
<SENT sid="42" pm="."><plain>Pruning devices can be conceived and integrated in iBP to improve the performances of the pruning phase and thus of the algorithm. Figure 1 The i BP recursive algorithm. Description of the iBP algorithm. Figure 2 The branch-and-prune search tree. Example of branch-and-prune search tree exploration. </plain></SENT>
<SENT sid="43" pm="."><plain>With solid line, we depict the path currently in use, with dotted arcs pruned paths, and with dashed arcs paths not yet explored. </plain></SENT>
<SENT sid="44" pm="."><plain>The squared node corresponds to a feasible solution. </plain></SENT>
</text></p><p><text><SENT sid="45" pm="."><plain>In the present work, we first describe the branching phase and the pruning devices used to determine the solutions to the Distance Geometry problem. </plain></SENT>
<SENT sid="46" pm="."><plain>Then, an overall view of the method is given along with the use of the branching and pruning devices at different steps and the complexity of the algorithm is analyzed. </plain></SENT>
<SENT sid="47" pm="."><plain>We finally illustrate the algorithm application with three proteins for which α-helical regions are known along with few long-range NMR constraints (ie. constraints measured between residues i and j such that |i−j|&gt;3 in the protein sequence). </plain></SENT>
<SENT sid="48" pm="."><plain>The obtained conformations display good stereochemical quality parameters, and the conformational space explored is larger than the one sampled with traditional optimization methods such as simulated annealing. </plain></SENT>
</text></p></sec></SecTag><SecTag type="METHODS"><sec id="Sec2"><title><text><SENT sid="49" pm="."><plain>Methods </plain></SENT>
</text></title><p><text><SENT sid="50" pm="."><plain>In order to sample the conformational space of a protein, we use a Branch-and-Prune algorithm to build a tree in which each node represents a solution for one atomic position. </plain></SENT>
<SENT sid="51" pm="."><plain>We limit ourselves in the present work to the calculation of the backbone and C β atomic coordinates. </plain></SENT>
</text></p><p><text><SENT sid="52" pm="."><plain>The constraints used to generate atomic coordinates along the Branch-and-Prune algorithm are the following: covalent distance constraints corresponding to bond lengths and bond angles, whose values are derived from high-resolution small molecule X-ray crystal structures [25];NMR distance constraints;van der Waals radii of atoms between non-bonded atom pairs (i,j): a fraction of the sum of the van der Waals radii of each atom provides a lower bound to the corresponding inter-atomic distances: (1)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ d_{ij}\geq \sigma (r^{vdw}_{i} + r^{vdw}_{j}), $$ \end{document}dij≥σ(rivdw+rjvdw), where σ∈ [ 0,1], and is typically around 0.85. </plain></SENT>
<SENT sid="53" pm="."><plain>The values for the radii are given in Table 1 [26,27]. </plain></SENT>
<SENT sid="54" pm="."><plain>These lower bounds apply only in the cases where no larger lower bound has been determined from NMR distance constraints; Table 1 Van der Waals radii (see [ 26 ] and [ 27 ])  atom  O  H  C  N  r vdw (Å)1.41.01.71.5 distances derived from the backbone torsion angles ϕ and ψ;hydrogen bonds in α-helix;amino-acid chirality; α-helix geometry. </plain></SENT>
</text></p><p><text><SENT sid="55" pm="."><plain>The atom coordinates are calculated, one by one, following the atom order P ato described in Figure 3 and previously proposed in [24]. </plain></SENT>
<SENT sid="56" pm="."><plain>In this order, some atoms are repeated to insure that any entered atom is defined by distance constraints with respect to three preceding atoms in P ato [24]. </plain></SENT>
<SENT sid="57" pm="."><plain>The carbonyl oxygens and the atoms C β, which were not present in the order P ato, are calculated separately. Figure 3 Order P ato  of the atoms parsed during the branch-and-prune algorithm.  </plain></SENT>
</text></p><p><text><SENT sid="58" pm="."><plain>Then, the tree is built using a recursive procedure to create each node of the tree. </plain></SENT>
<SENT sid="59" pm="."><plain>This procedure is called branching phase. </plain></SENT>
<SENT sid="60" pm="."><plain>The created nodes are then submitted to the pruning devices in order to decide whether the node should be kept or removed. </plain></SENT>
<SENT sid="61" pm="."><plain>If the node is removed, the possible branches starting from this node are also pruned. </plain></SENT>
<SENT sid="62" pm="."><plain>A pruning device is responsible for checking whether a partial solution is feasible, i.e. to check whether a set of embedded atoms fulfill the constraints (1)-(7) described above. </plain></SENT>
</text></p><p><text><SENT sid="63" pm="."><plain>In the following, we describe the branching phase and the pruning devices. </plain></SENT>
<SENT sid="64" pm="."><plain>Then, the complexity of the algorithm is described from a theoretical point of view, before presenting some application cases. </plain></SENT>
</text></p><sec id="Sec3"><title><text><SENT sid="65" pm="."><plain>Branching devices </plain></SENT>
</text></title><p><text><SENT sid="66" pm="."><plain>The tree parsed during iBP is formed by nodes, each corresponding to one set of atomic coordinates from the order P ato (Figure 3) [24]. </plain></SENT>
<SENT sid="67" pm="."><plain>At each level of the tree, the atomic coordinates of the corresponding atom are calculated by making use of a recursive procedure, called branching phase. </plain></SENT>
<SENT sid="68" pm="."><plain>The current atom position is defined by distance constraints to three other atoms. </plain></SENT>
<SENT sid="69" pm="."><plain>These distances are obtained from the constraints (1-3) described above: (1) the covalent constraints, (2) the NMR distance constraints, (3) the van der Waals radii. </plain></SENT>
</text></p><p><text><SENT sid="70" pm="."><plain>If the distance constraints specify a unique value rather than an interval, this signifies that the distances to three immediate predecessors from the current vertex are known: these are the centers of the three spheres, and the distances are the radii of these spheres. </plain></SENT>
<SENT sid="71" pm="."><plain>The position of the current vertex/atom is thus defined by the intersection of three spheres, so there are at most two solutions for the current atom position: this is called a 2-branching situation (Figure 4). Figure 4 Intersection of three spheres. Intersection of three spheres, colored in yellow, green and cyan. </plain></SENT>
<SENT sid="72" pm="."><plain>The two points produced by the intersection are indicated with red spots. </plain></SENT>
</text></p><p><text><SENT sid="73" pm="."><plain>When a distance is not uniquely defined, but rather defined by lower and upper bounds, i.e. d i,j∈[l i,j,u i,j], this distance is uniformly discretized by sampling b≥1 values in [l i,j,u i,j], as depicted in Figure 5. (2)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \tilde d_{i}=\left\{ l_{i,i-3} + (t-1)\frac{(u_{i,i-3}-l_{i,i-3})}{b} : t=1,\ldots,b\right\}. $$ \end{document}d~i=li,i−3+(t−1)(ui,i−3−li,i−3)b:t=1,…,b. Figure 5 Discretization of the distance constraints. An example of discretization of the distance d i,i−3. </plain></SENT>
<SENT sid="74" pm="."><plain>The solid circle represents the result of the intersection of the spheres centered in i−1,i−2 with radii d i,i−1,d i,i−2, respectively. </plain></SENT>
<SENT sid="75" pm="."><plain>The distance d i,i−3 is discretized accordingly to Equation 2 with b=5: dotted circles represent the intersections of spheres centered in i−3 with radii in \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $\tilde d_{i}$ \end{document}d~i with the plane containing the i−3,i−2 and i−1. </plain></SENT>
<SENT sid="76" pm="."><plain>Thick gray arcs represent the feasible regions for the atom i. </plain></SENT>
</text></p><p><text><SENT sid="77" pm="."><plain>In this case, we have a b-branching situation. </plain></SENT>
</text></p><p><text><SENT sid="78" pm="."><plain>The algorithm used for calculating the atom coordinates is then applied to each set of \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $\tilde {d}_{i}$ \end{document}d~i values sampled for the distance constraints. </plain></SENT>
<SENT sid="79" pm="."><plain>The choice of the discretization factor b is a crucial point: a small value might lead to an infeasible problem because we may not select any feasible distance; a larger value increases the computational burden. </plain></SENT>
<SENT sid="80" pm="."><plain>In general, the finer the discretization, the more accurate the computation is, but it is not trivial to figure out the optimal value for b. </plain></SENT>
<SENT sid="81" pm="."><plain>One way to choose b is to consider that the number of nodes in the search tree is bounded by 3+(2l b k), where l is the number of tree levels where we have a 2-branching situation, and k is the number of tree levels where we have a b-branching situation [28]. </plain></SENT>
<SENT sid="82" pm="."><plain>Appropriate values of b should result in a manageable number of nodes. </plain></SENT>
</text></p><p><text><SENT sid="83" pm="."><plain>Given the position of the three previous atoms k−3, k−2, k−1 in the order P ato and given the constraints to these atoms of the atom k to be embedded, the position of k is calculated by a recursive matrix multiplication by making use of the set of distances d={d k,k−1,d k,k−2,d k,k−3} between the previous atoms and k. </plain></SENT>
<SENT sid="84" pm="."><plain>Although there are several methods to compute sphere intersections [29], in our experience, the best trade-off between efficiency and numerical stability is given by the use of recursion matrices [23], and of the two following angles: (i) the torsion angle ω 3 formed by atoms {k,k−1,k−2,k−3} which depends on the distance between k and k−3, (ii) the angle θ 2 formed by atoms {k,k−1,k−2}. </plain></SENT>
</text></p><p><text><SENT sid="85" pm="."><plain>The recursion is applied through the equation: (3)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \begin{aligned} \left[\begin{array}{c} x_{k} \\ y_{k} \\ z_{k} \\ 1 \end{array} \right] &amp;= B_{1} B_{2} B_{3} \ldots B_{k}(d,\sigma) \left[\begin{array}{c} 0 \\ 0 \\ 0 \\ 1 \end{array}\right]\\ &amp;= Q_{k-1}B_{k}(d,\sigma) \left[\begin{array}{c} 0 \\ 0 \\ 0 \\ 1 \end{array}\right] = Q_{k} \left[\begin{array}{c} 0 \\ 0 \\ 0 \\ 1 \end{array}\right], \end{aligned} $$ \end{document}xkykzk1=B1B2B3…Bk(d,σ)0001=Qk−1Bk(d,σ)0001=Qk0001, </plain></SENT>
</text></p><p><text><SENT sid="86" pm="."><plain>where: (4)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ {\fontsize{7}{6}\begin{aligned} B_{k} (d,\sigma) = \left[\begin{array}{cccc} -\cos\theta_{2} &amp; -\sigma \sin\theta_{2} &amp;0&amp; -d_{k,k-1}\cos\theta_{2}\\ \sigma\sin\theta_{2}\cos\omega_{3} &amp; -\cos\theta_{2}\cos\omega_{3} &amp; -\sin\omega_{3}&amp; \sigma d_{k,k-1} \sin\theta_{2}\cos\omega_{3}\\ \sigma\sin\theta_{2}\sin\omega_{3} &amp; -\cos\theta_{2} \sin\omega_{3}&amp;\cos\omega_{3} &amp;\sigma d_{k,k-1} \sin\theta_{2}\sin\omega_{3}\\ 0 &amp; 0&amp; 0&amp;1 \end{array}\right], \end{aligned}} $$ \end{document}Bk(d,σ)=−cosθ2−σsinθ20−dk,k−1cosθ2σsinθ2cosω3−cosθ2cosω3−sinω3σdk,k−1sinθ2cosω3σsinθ2sinω3−cosθ2sinω3cosω3σdk,k−1sinθ2sinω30001, </plain></SENT>
</text></p><p><text><SENT sid="87" pm="."><plain>and σ∈{+1,−1}. </plain></SENT>
<SENT sid="88" pm="."><plain>The series of recursion matrices is initialized as: (5)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \begin{aligned} B_{1}= \left[\begin{array}{cccc} 1 &amp; 0&amp; 0&amp;0\\ 0 &amp; 1&amp; 0&amp;0\\ 0 &amp; 0&amp; 1&amp;0\\ 0 &amp; 0&amp; 0&amp;1 \end{array}\right], B_{2}= \left[\begin{array}{cccc} -1 &amp; 0&amp; 0&amp; -d_{2,1}\\ 0 &amp; 1&amp; 0&amp;0\\ 0 &amp; 0&amp; -1&amp;0\\ 0 &amp; 0&amp; 0&amp;1 \end{array}\right],\\ B_{3}= \left[\begin{array}{cccc} -\cos\theta_{3} &amp; -\sin\theta_{3} &amp;0&amp; -d_{3,2}\cos\theta_{3}\\ \sin\theta_{3}&amp; -\cos\theta_{3} &amp; 0 &amp; d_{3,2} \cos\theta_{3}\\ 0 &amp; 0&amp; 1&amp;0\\ 0 &amp; 0&amp; 0&amp;1 \end{array}\right]. \end{aligned} $$ \end{document}B1=1000010000100001,B2=−100−d2,1010000−100001,B3=−cosθ3−sinθ30−d3,2cosθ3sinθ3−cosθ30d3,2cosθ300100001. </plain></SENT>
</text></p><p><text><SENT sid="89" pm="."><plain>d 2,1 being the distance between the first and the second atom, and d 3,2 the distance between the third and the second atom in the order P ato. </plain></SENT>
</text></p><p><text><SENT sid="90" pm="."><plain>The total number of B k matrices to be calculated along the parsing of the tree is bounded by 2∣ P ato ∣b, where ∣ P ato ∣ is the size of the ordered atom list P ato. </plain></SENT>
<SENT sid="91" pm="."><plain>The product Q k−1 B k is calculated in two steps: (1) the fourth column of Q k, which gives us the coordinates of k, is computed; (2) only if k is not pruned, the three remaining columns are computed. </plain></SENT>
</text></p><p><text><SENT sid="92" pm="."><plain>We must distinguish two cases when embedding an atom k. </plain></SENT>
<SENT sid="93" pm="."><plain>If it is the first appearance of k in P ato, we use equation 3 to compute all possible embeddings of k for σ∈{+1,−1} and the set of distances d. </plain></SENT>
<SENT sid="94" pm="."><plain>If it is not the first appearance of k in P ato, we need to take into account the fact that numerical instabilities generate matrices which will lead to slightly different coordinates for k than those computed the first time. </plain></SENT>
<SENT sid="95" pm="."><plain>In order to decrease the impact of these numerical errors, we compute the set of distances d, the angles θ 2,ω 3 and for σ∈{+1,−1} the corresponding matrices B k(d,+1),B k(d,−1), which lead to two possible embeddings of k (Equation 3), as k +=Q k−1 B k(d,+1) and k −=Q k−1 B k(d,−1). </plain></SENT>
<SENT sid="96" pm="."><plain>We choose the value of k that yields the updated coordinates of k being the closest to the previous coordinates of this atom. </plain></SENT>
</text></p><p><text><SENT sid="97" pm="."><plain>Each carbonyl oxygen O i−1 is uniquely determined for residue i, once C i−1, N i and H i have been embedded, since these atoms are all part of the peptide plane [30]. </plain></SENT>
<SENT sid="98" pm="."><plain>As is common practice (see, e.g., [31-33]), we fix here the torsion angle ω of the peptide plane to -180° or 0°. </plain></SENT>
<SENT sid="99" pm="."><plain>In a previous implementation [34], the positions of the carboxylic oxygens were not stored. </plain></SENT>
<SENT sid="100" pm="."><plain>Although this approach leads to memory savings, the availability of carboxylic oxygen positions can improve the definition of the α-helix secondary structure. </plain></SENT>
</text></p><p><text><SENT sid="101" pm="."><plain>The positions of the carbonyl oxygens are thus now calculated in the following way. </plain></SENT>
<SENT sid="102" pm="."><plain>If k=O i−1 is the carboxylic oxygen atom located at the vertex k, and {v 1,v 2,v 3} are the vertices corresponding to atoms {C i−1,N i,H i}, belonging on the same peptide plane π, we denote n π the normal vector to π. </plain></SENT>
<SENT sid="103" pm="."><plain>The coordinates of k can then be computed by solving the following non-linear system: (6)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \left\{ \begin{array}{ll} \| k - v_{i} \|^{2} = d_{ki}^{2}, &amp; i=1,2,3\\ n_{\pi}^{T} (v_{1} - k) = 0&amp; \end{array} \right.. $$ \end{document}∥k−vi∥2=dki2,i=1,2,3nπT(v1−k)=0. </plain></SENT>
</text></p><p><text><SENT sid="104" pm="."><plain>where d ki are the distances between atoms k and i. </plain></SENT>
<SENT sid="105" pm="."><plain>Using an approach similar to those employed in [35], we obtain the equivalent linear system: (7)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \left\{ \begin{array}{l} 2 (v_{2} - v_{1})^{T} k = d_{k1}^{2} - d_{k2}^{2} -\|v_{1}\|^{2} +\|v_{2}\|^{2}\\ 2 (v_{3} - v_{1})^{T} k = d_{k1}^{2} - d_{k3}^{2} -\|v_{1}\|^{2} +\|v_{3}\|^{2}\\ n_{\pi}^{T} (v_{1} - k) = 0 \end{array} \right. $$ \end{document}2(v2−v1)Tk=dk12−dk22−∥v1∥2+∥v2∥22(v3−v1)Tk=dk12−dk32−∥v1∥2+∥v3∥2nπT(v1−k)=0 </plain></SENT>
</text></p><p><text><SENT sid="106" pm="."><plain>The parameter d k1 is the length of the bond connecting O i−1 and C i−1, the parameters d k2 and d k3 are the distances between k=O i−1 and N i, H i, calculated from bond angles and bond lengths between atoms of the peptide plane, and the angle ω of 180° in a trans peptide plane. </plain></SENT>
<SENT sid="107" pm="."><plain>The case of the cis peptide plane can be treated in the same way, modifying the value of ω to be 0°. </plain></SENT>
</text></p><p><text><SENT sid="108" pm="."><plain>Following the idea proposed for carbonyl oxygens, the coordinates k of a C β atom can be computed from previously calculated atoms, because the four distances of k to atoms {v 1=C α,v 2=H α,v 3=N,v 4=C} are exactly known, and because these five atoms are not coplanar. </plain></SENT>
<SENT sid="109" pm="."><plain>The coordinates k are calculated by solving the linear system: (8)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \left\{ \begin{aligned} 2 (v_{2} - v_{1})^{T} k = d_{k1}^{2} - d_{k2}^{2} -\|v_{1}\|^{2} +\|v_{2}\|^{2}\\ 2 (v_{3} - v_{1})^{T} k = d_{k1}^{2} - d_{k3}^{2} -\|v_{1}\|^{2} +\|v_{3}\|^{2}\\ 2 (v_{4} - v_{1})^{T} k = d_{k1}^{2} - d_{k4}^{2} -\|v_{1}\|^{2} +\|v_{4}\|^{2} \end{aligned} \right. $$ \end{document}2(v2−v1)Tk=dk12−dk22−∥v1∥2+∥v2∥22(v3−v1)Tk=dk12−dk32−∥v1∥2+∥v3∥22(v4−v1)Tk=dk12−dk42−∥v1∥2+∥v4∥2 </plain></SENT>
</text></p><p><text><SENT sid="110" pm="."><plain>The parameter d k1 is the length of the bond connecting k=C β and C α, the parameters d k2, d k3 and d k4 are the distances between k=C β and H α, N, C, calculated from bond angles and bond lengths between these atoms. </plain></SENT>
</text></p></sec><sec id="Sec4"><title><text><SENT sid="111" pm="."><plain>Pruning devices </plain></SENT>
</text></title><p><text><SENT sid="112" pm="."><plain>Once the set of possible coordinates of the atom k has been determined in the branching phase described above, pruning devices are used to check whether the coordinates of k are feasible. </plain></SENT>
<SENT sid="113" pm="."><plain>In some cases described below, the coordinates of k along with the coordinates of previously embedded atoms are checked together. </plain></SENT>
<SENT sid="114" pm="."><plain>If the check is negative, the solution obtained for k is discarded, which prunes all tree branches originating from the node k. </plain></SENT>
<SENT sid="115" pm="."><plain>In this section, we present the pruning devices used to accept or discard the coordinates of the atom k generated by the branching devices. </plain></SENT>
<SENT sid="116" pm="."><plain>The pruning device applies all these tests as soon as the involved atoms have been embedded. </plain></SENT>
</text></p><sec id="Sec5"><title><text><SENT sid="117" pm="."><plain>Direct distance feasibility (DDF) </plain></SENT>
</text></title><p><text><SENT sid="118" pm="."><plain>As the coordinates for an atom k are determined, we first check that all distances between k and the other embedded atoms respect the given lower and upper bounds arising from the constraints (1-3) listed in section “Solving the DGP with iBP”. </plain></SENT>
</text></p></sec><sec id="Sec6"><title><text><SENT sid="119" pm="."><plain>Torsion angle feasibility (TAF) </plain></SENT>
</text></title><p><text><SENT sid="120" pm="."><plain>The values of the backbone torsion angles ϕ,ψ, are used as a pruning device, checking whether they are located in the permitted regions of the Ramachandran plot. </plain></SENT>
<SENT sid="121" pm="."><plain>The pruning device, first introduced in [34], is implemented in the following way. </plain></SENT>
<SENT sid="122" pm="."><plain>The torsion angle ξ ijkl defined by a quadruple of atoms {i,j,k,l} falls into a domain Ξ ijkl, up to a certain tolerance ε t&gt;0. </plain></SENT>
<SENT sid="123" pm="."><plain>In general, Ξ ijkl is the union of κ dis-joined intervals, i.e. (9)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \Xi_{ijkl} = \bigcup\limits_{c=1}^{\kappa} \Xi_{ijkl}^{c} $$ \end{document}Ξijkl=⋃c=1κΞijklc </plain></SENT>
</text></p><p><text><SENT sid="124" pm="."><plain>From the bounds on a torsion angle ξ ijkl it is possible to derive bounds on the distance d il, noticing that (10)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ d_{il}(\xi_{ijkl}) = \sqrt{d_{ij}^{2} + d_{lj}^{2} - 2(\cos(\xi_{ijkl})\sqrt{ef} + bc) d_{ij}d_{lj} }, $$ \end{document}dil(ξijkl)=dij2+dlj2−2(cos(ξijkl)ef+bc)dijdlj, </plain></SENT>
</text></p><p><text><SENT sid="125" pm="."><plain>where: (11)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \begin{aligned} b&amp;= \frac{1}{2}\frac{d_{lj}^{2} + d_{jk}^{2} - d_{lk}^{2}}{d_{lj}d_{kj}} \\ c&amp;= \frac{1}{2}\frac{d_{ij}^{2} + d_{jk}^{2} - d_{ik}^{2}}{d_{ij}d_{jk}}\\ e&amp;= 1-b^{2}, f= 1-c^{2}.\\ \end{aligned} $$ \end{document}b=12dlj2+djk2−dlk2dljdkjc=12dij2+djk2−dik2dijdjke=1−b2,f=1−c2. </plain></SENT>
</text></p><p><text><SENT sid="126" pm="."><plain>Taking the maximum and minimum values of d(ξ ijkl) for ξ ijkl∈Ξ ijkl, we obtain an interval [ l il,u il] for the distance d il. </plain></SENT>
<SENT sid="127" pm="."><plain>The sign of the angle ξ ijkl is used as an additional pruning criterion along with the d il interval. </plain></SENT>
</text></p></sec><sec id="Sec7"><title><text><SENT sid="128" pm="."><plain>Dijkstra shortest-path (DSP) </plain></SENT>
</text></title><p><text><SENT sid="129" pm="."><plain>As introduced in [23], we can exploit the fact that the distances are Euclidean to improve the iBP pruning capabilities. </plain></SENT>
<SENT sid="130" pm="."><plain>We extend and generalize the procedure presented in [36] in the following way. </plain></SENT>
<SENT sid="131" pm="."><plain>We introduce an auxiliary graph G + with the same topology as the graph connecting the atoms in the protein, but such that the weight of each edge (i,j) is the upper bound of the distance d ij. </plain></SENT>
<SENT sid="132" pm="."><plain>For every pair of atoms i,j, the shortest-path between i,j in G + is a valid over-estimate of d ij. </plain></SENT>
<SENT sid="133" pm="."><plain>Thus we used an all-to-all shortest-path algorithm, the Floyd-Warshall algorithm [37], to refine the upper bound for each pair of atoms. </plain></SENT>
</text></p><p><text><SENT sid="134" pm="."><plain>The Dijkstra Shortest-Path pruning device uses the refined upper bounds of inter-atomic distances in the following way. </plain></SENT>
<SENT sid="135" pm="."><plain>According to Lemma 4 in [23], for an atom k and for each atom pair i,j such that i&lt;j&lt;k in the order P ato and for which d ik is known, the embedding of k can be pruned if: (12)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \|i-j\| - d_{ik}&gt; u_{jk} $$ \end{document}∥i−j∥−dik&gt;ujk </plain></SENT>
</text></p><p><text><SENT sid="136" pm="."><plain>where u jk is the upper bound of the atom pair (j,k) obtained using the Floyd-Warshall algorithm [37]. </plain></SENT>
</text></p></sec><sec id="Sec8"><title><text><SENT sid="137" pm="."><plain>Chirality (CHI) </plain></SENT>
</text></title><p><text><SENT sid="138" pm="."><plain>The pruning of atom coordinates through the amino-acid chirality is implemented through the so-called CORN rule of thumb: in amino acids, the groups COOH, R (sidechain), NH2 and H are bonded to the chiral center C α carbon. </plain></SENT>
<SENT sid="139" pm="."><plain>Starting with the hydrogen atom away from the viewer, if these groups are arranged clockwise around the C α carbon, then the amino-acid is in the D-form. </plain></SENT>
<SENT sid="140" pm="."><plain>If these groups are arranged counter-clockwise, the amino-acid is in the L-form. </plain></SENT>
<SENT sid="141" pm="."><plain>The CORN rule was restated by imposing that the torsion angle defined by the atoms C,C β,N,H α of residue i for the D-form or C,N,C β,H α of residue i for the L-form, is positive. </plain></SENT>
</text></p></sec><sec id="Sec9"><title><text><SENT sid="142" pm="."><plain>α-helix secondary structure </plain></SENT>
</text></title><p><text><SENT sid="143" pm="."><plain>We proposed the use of α helix information as a pruning device in the context of the iBP algorithm first in [34]. </plain></SENT>
<SENT sid="144" pm="."><plain>The α helix location can be determined from an analysis of the NMR chemical shifts by TALOS [38]. </plain></SENT>
<SENT sid="145" pm="."><plain>Four criteria are used to enforce the formation of an α helix: (i) the formation of backbone hydrogen bonds between amide hydrogens and carbonyl oxygens, (ii) the alignment of the amide and carbonyl functions checked by a qualitative condition on the energy of the hydrogen bond, (iii) the definition of backbone ϕ and ψ torsion angles already described in the Torsion Angle Feasibility, (iv) the definition of three additional angles θ, θ’ and θ” similar to the ones introduced by Grishaev et al. [39]. </plain></SENT>
</text></p><p><text><SENT sid="146" pm="."><plain>On a sequence of m+1 contiguous residues I α={i,i+1,…,i+m} forming an α helix, for any pair of residues (i−4,i) belonging to I α, the lower and upper bounds on the distance between the carboxylic oxygen O i−4 and the amide hydrogen H i should be compatible with the formation of an hydrogen bond. </plain></SENT>
<SENT sid="147" pm="."><plain>The upper and lower bounds are defined in an input parameter file of iBP, and were set to 1.9 and 3.0 Å in the present work. </plain></SENT>
</text></p><p><text><SENT sid="148" pm="!"><plain>The condition checking the alignment of atoms involved in the hydrogen bond is implemented by calculating a local energy information defined in the DSSP package [40]: (13)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ q_{1}q_{2}\!\left[ \frac{1}{d_{O_{i-4}N_{i}}}\! +\! \frac{1}{d_{C_{i-4}H_{i}}}- \frac{1}{d_{O_{i-4}H_{i}}}\! </plain></SENT>
<SENT sid="149" pm="."><plain>- \!\frac{1}{d_{C_{i-4}N_{i}}} \right]\cdot f&lt; -0.5, $$ \end{document}q1q21dOi−4Ni+1dCi−4Hi−1dOi−4Hi−1dCi−4Ni·f&lt;−0.5, </plain></SENT>
</text></p><p><text><SENT sid="150" pm="."><plain>with q 1=0.42,q 2=0.2 and f=332, and d AB correspond to the distance between atoms A and B. </plain></SENT>
</text></p><p><text><SENT sid="151" pm="."><plain>The last criterion enforces the angles θ, θ’, θ” to be respectively into the interval values 0/70°, 0/90° and 110/180°. </plain></SENT>
</text></p></sec></sec><sec id="Sec10"><title><text><SENT sid="152" pm="."><plain>Implementation details </plain></SENT>
</text></title><p><text><SENT sid="153" pm="."><plain>In this section we provide an overview of the main implementation features. </plain></SENT>
<SENT sid="154" pm="."><plain>The iBP algorithm has been coded in C++ with extensive use of template meta-programming [41], STL [42,43], and BOOST (www.boost.org). </plain></SENT>
<SENT sid="155" pm="."><plain>Linear systems, as for instance (7), are solved using the LAPACK library [44]. </plain></SENT>
</text></p><p><text><SENT sid="156" pm="."><plain>Discretizable DGP instances were represented by simple weighted undirected graphs G=(V,E,d), which were handled by the Boost Graph Library (BGL) [45]. </plain></SENT>
<SENT sid="157" pm="."><plain>The points in \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $\mathbb {R}^{3}$ \end{document}ℝ3 were represented using the Boost Geometry Library (also known as Generic Geometry Library, GGL: www.boost.org). </plain></SENT>
</text></p><p><text><SENT sid="158" pm="."><plain>Constraints on distances, angles or energy are typically expressed by enforcing a variable x to take values in a domain , which is generally the union of intervals and singletons: (14)\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $$ \mathcal{D} =\left\{ \bigcup_{j=1}^{m} \bar x_{j} \right\}\cup \left\{ \bigcup_{i=1}^{k} \left[{x_{i}^{l}},{x_{i}^{u}}\right]\right\}. $$ \end{document}D=⋃j=1mx¯j∪⋃i=1kxil,xiu. </plain></SENT>
</text></p><p><text><SENT sid="159" pm="."><plain>The Boost Interval Library (BIL – see [46,47]) was used to store such representation, and to perform basic operations for intervals and singletons. </plain></SENT>
<SENT sid="160" pm="."><plain>On top of the BIL, we define the type domain which contains a set of intervals and operations as intersection, scaling, etc. </plain></SENT>
<SENT sid="161" pm="."><plain>The BIL allows also to select the underlining data format for the interval (single/double precision real, integer). </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="METHODS"><sec id="Sec11"><title><text><SENT sid="162" pm="."><plain>Theory </plain></SENT>
</text></title><p><text><SENT sid="163" pm="."><plain>In this section we give some details about the worst-case asymptotic complexity behavior of the iBP algorithm. </plain></SENT>
<SENT sid="164" pm="."><plain>The description given above includes many details which are useful for finding the structure of proteins but which somewhat complicate the precise mathematical treatment. </plain></SENT>
<SENT sid="165" pm="."><plain>We first give a very brief abstract description of the iBP and of the formal problem it solves, and then proceed to discuss its complexity. </plain></SENT>
</text></p><p><text><SENT sid="166" pm="?"><plain>Formally speaking, the DGP is the following decision problem: given an integer K&gt;0, a simple undirected graph G=(V,E) and an edge weight function \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $d:E\to \mathbb {R}_{+}$ \end{document}d:E→ℝ+, is there a realization \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $x:V\to \mathbb {R}^{K}$ \end{document}x:V→ℝK such that for each {u,v}∈E we have ∥x u−x v∥2=d uv? </plain></SENT>
<SENT sid="167" pm="."><plain>Note that we are writing x u for x(u) and d uv for d(u,v). </plain></SENT>
<SENT sid="168" pm="."><plain>We also remark that in the more “applied” interpretation given in the preceding section, the range of the edge function d is \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $\mathbb {IR}_{+}$ \end{document}&#120128;ℝ+, i.e. the set of all non-negative closed real intervals, and K=3. </plain></SENT>
<SENT sid="169" pm="."><plain>The DGP is NP-hard for any K&gt;1 and NP-complete for K=1 [48]. </plain></SENT>
<SENT sid="170" pm="."><plain>Since we are interested in finding all solutions of the DGP rather than just one, we denote by X the set of all realizations of G. </plain></SENT>
</text></p><sec id="Sec12"><title><text><SENT sid="171" pm="."><plain>Assumptions on the DGP input data </plain></SENT>
</text></title><p><text><SENT sid="172" pm="."><plain>In fact, due to the fact that our data come from a protein structure setting, we can also make the following assumptions about G and d: there is an order 1,2,…,n on the vertices such that 1,2,3 is a triangle in the graph G and, for each vertex v&gt;3, v is adjacent to v−1,v−2,v−3;the set of edges E can be partitioned in two subsets E D and E P, such that E P consists of all edges {u,v} with v&gt;4 and |v−u|&gt;3, and \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $E_{D}=E\smallsetminus E_{P}$ \end{document}ED=E\EP; E D can be further subdivided in \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $E_{D}^{\prime }$ \end{document}ED′ and \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $E_{D}^{\prime \prime }$ \end{document}ED′′, so that \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $E_{D}^{\prime \prime }$ \end{document}ED′′ consists of all edges {u,v} with |v−u|=3, and \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $E_{D}^{\prime }=E_{D}\smallsetminus E_{D}^{\prime \prime }$ \end{document}ED′=ED\ED′′;the distance function d is such that: (a) d uv is a scalar for each \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $\{u,v\}\in E^{\prime }_{D}$ \end{document}{u,v}∈ED′; (b) d uv consists of a discrete set of b scalars for each \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $\{u,v\}\in E^{\prime \prime }_{D}$ \end{document}{u,v}∈ED′′; (c) d uv is a general interval for all {u,v}∈E P. </plain></SENT>
</text></p><p><text><SENT sid="173" pm="."><plain>We remark that the above definitions can be appropriately extended to Euclidean spaces of any dimension K&gt;0, not just K=3. </plain></SENT>
<SENT sid="174" pm="."><plain>We call E D the discretization edges and E P the pruning edges. </plain></SENT>
<SENT sid="175" pm="."><plain>Discretization edges ensure that the graph G is rigid, which implies that there are finitely many realizations of G in \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $\mathbb {R}^{K}$ \end{document}ℝK. </plain></SENT>
<SENT sid="176" pm="."><plain>Pruning edges make some of those realizations infeasible, and thereby make the solution set X smaller. </plain></SENT>
<SENT sid="177" pm="."><plain>A few remarks are in order: we consider that distances which are known because of covalent bond relations are sufficiently precise to be represented by a scalar;we consider that distances which are known from NOESY (or other) experiments can be represented by intervals;we assume that a limited number of the intervals can be discretized into sets containing a finite number b of values within the intervals;the edges in \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $E_{D}^{\prime }$ \end{document}ED′ represent atom pairs of the form {v,v−1} or {v,v−2} for any v&gt;2: these are involved in covalent bonds;the edges in \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $E_{D}^{\prime \prime }$ \end{document}ED′′ represent atom pairs which are assigned a certain number b of possible values (optionally b=1 for certain pairs);the edges in E P represent atom pairs for which the distance might be a general interval. </plain></SENT>
</text></p><p><text><SENT sid="178" pm="."><plain>We remark that the order on V was initially intended to follow the protein backbone [49], but new orders which better exploit the hydrogen atoms in or close to the backbone have been defined in [50,51]: these are the orders on which the above assumptions are based. </plain></SENT>
</text></p><p><text><SENT sid="179" pm="."><plain>The DGP with the restrictions above, but where all intervals are replaced by scalars, is called DISCRETIZABLE MOLECULAR DGP (DMDGP). </plain></SENT>
<SENT sid="180" pm="."><plain>Both the DMDGP and its generalization to any K (denoted by KDMDGP) are NP-hard [52,53]. </plain></SENT>
<SENT sid="181" pm="."><plain>The problem defined above, involving intervals, obviously contains the DMDGP as a sub-case and is hence also NP-hard by inclusion. </plain></SENT>
</text></p></sec><sec id="Sec13"><title><text><SENT sid="182" pm="."><plain>When all distances are precise </plain></SENT>
</text></title><p><text><SENT sid="183" pm="."><plain>We first focus on the simplest case, where all intervals are replaced by scalar values. </plain></SENT>
<SENT sid="184" pm="."><plain>Then \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $d:E\to \mathbb {R}_{+}$ \end{document}d:E→ℝ+, and b=1. </plain></SENT>
<SENT sid="185" pm="."><plain>In this simplified setting, the iBP is simply called BP [52], and the order on V is called a contiguous trilateration order [54] or a DMDGP order [55]. </plain></SENT>
</text></p><p><text><SENT sid="186" pm="."><plain>The BP can be defined as a recursive procedure: assuming we already found a realization x 1,…,x v−1 for the vertices 1,…,v−1, and that we mean to find a consistent realization x v for v, the discretization edges E D guarantee that there will be at most two positions for x v compatible with the distances restricted to E D [49]. </plain></SENT>
<SENT sid="187" pm="."><plain>This can be intuitively understood in \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $\mathbb {R}^{3}$ \end{document}ℝ3 by considering the intersection of three spheres centered at x v−1,x v−2,x v−3 with radii d v,v−1,d v,v−2,d v,v−3: the first two spheres either do not meet or their intersection is in general a circle, and the intersection of the third sphere with this circle is either empty or consists in general of two points [56]. </plain></SENT>
<SENT sid="188" pm="."><plain>We can now consider the distances defined on pruning edges in E P, linking v to its preceding vertices in order to accept or reject these two points. </plain></SENT>
<SENT sid="189" pm="."><plain>For each accepted point we recursively call BP with v replaced by v+1, for all v&lt;n. </plain></SENT>
<SENT sid="190" pm="."><plain>When v=n we have a valid realization of the graph: we save it in X, and proceed to complete the recursive search. </plain></SENT>
<SENT sid="191" pm="."><plain>This yields a search tree which is explored depth-first. </plain></SENT>
<SENT sid="192" pm="."><plain>The recursion starts after placing the initial triangle 1,2,3 (either arbitrarily or by using BP restricted to subspaces), so this tree starts branching at level 4. </plain></SENT>
<SENT sid="193" pm="."><plain>It can be proved that, at completion, X contains all incongruent (modulo translations and rotations) realizations of G. </plain></SENT>
</text></p><p><text><SENT sid="194" pm="."><plain>In the case where \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $E_{P}=\varnothing $ \end{document}EP=∅, the search tree is a complete binary tree with 2n−3 nodes at the n-th (and last) level: in other words, its depth is n and its width is 2n−3. </plain></SENT>
<SENT sid="195" pm="."><plain>This is the worst case, since the BP must explore all of the nodes in the tree, and proves that the BP (and hence the iBP, since it generalizes the BP) is an exponential-time algorithm in n. </plain></SENT>
</text></p><p><text><SENT sid="196" pm="."><plain>When \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $E_{P}\not =\varnothing $ \end{document}EP≠∅, it was shown that X almost always contains a number of solutions which is either zero or a power of two [55]; this discovery led to a set of results where the BP search tree width can be kept polynomial in n during the search [53]. </plain></SENT>
<SENT sid="197" pm="."><plain>Since the exponential behavior is only due to the tree width, this yields a set of cases where the BP is actually fixed-parameter tractable (FPT). </plain></SENT>
<SENT sid="198" pm="."><plain>Throughout all our experiments with protein data we were always able to fix the parameter controlling the exponential growth of the tree width to a universal constant, which makes BP “polynomial on proteins” (this is an informal statement — the precise statement is given in [53]). </plain></SENT>
</text></p></sec><sec id="Sec14"><title><text><SENT sid="199" pm="."><plain>Intervals and discrete distance sets </plain></SENT>
</text></title><p><text><SENT sid="200" pm="."><plain>The theory supporting the case where d might map edges to discrete sets of distance values or intervals, which is the case treated in this paper, is not so clearly understood yet. </plain></SENT>
<SENT sid="201" pm="."><plain>As it generalizes the simpler case sketched above, in a certain sense it inherits its properties, but this is an oversimplification: for instance, if all intervals are [ 0,∞], it is obvious that the problem is easy independently of the graph topology, since every realization is valid. </plain></SENT>
</text></p><p><text><SENT sid="202" pm="."><plain>Some bounds on the cardinality of X in the presence of discrete sets and intervals are given in [55]. </plain></SENT>
<SENT sid="203" pm="."><plain>Our understanding is that if the intervals are small enough, the theory which led to fixed-parameter tractability goes through with few changes, but we have no way so far of establishing an aprioristic maximum width for the intervals. </plain></SENT>
<SENT sid="204" pm="."><plain>If the intervals are very large the problem might become tractable, as mentioned above, for the purposes of finding at least one solution. </plain></SENT>
<SENT sid="205" pm="."><plain>The iBP would still behave exponentially, however. </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="RESULTS,DISCUSS"><sec id="Sec15"><title><text><SENT sid="206" pm="."><plain>Results and discussion </plain></SENT>
</text></title><p><text><SENT sid="207" pm="."><plain>We applied the presented algorithm to three examples of proteins displaying α helical secondary structures. </plain></SENT>
<SENT sid="208" pm="."><plain>Before presenting the obtained results, we emphasize that the method proposed here has a completely different philosophy than classical optimization approaches commonly used in the field of NMR structure determination. </plain></SENT>
<SENT sid="209" pm="."><plain>In the present approach, each constraint is treated in the strict sense, that is, no violation, however small, is tolerated. </plain></SENT>
<SENT sid="210" pm="."><plain>This is why we consistently use the word constraint in the paper. </plain></SENT>
<SENT sid="211" pm="."><plain>This is what potentially allows us to systematically explore the entire search space. </plain></SENT>
<SENT sid="212" pm="."><plain>However, the use of the procedure demands that the data have been pre-processed accordingly, and all geometric inconsistencies that exist in three–dimensional space have been removed. </plain></SENT>
</text></p><p><text><SENT sid="213" pm="."><plain>For the proteins studied here, if one includes the ensemble of NMR interval distance constraints stored in the.mr file at the Protein Data Bank (PDB) [57] as well as all pruning devices described above, all solutions are pruned out, indicating that no solution to the distance geometry problem exists with the deposited data. </plain></SENT>
<SENT sid="214" pm="."><plain>This is not really surprising, since the optimization algorithms generally used in NMR structure determination are based on optimization of a target function or hybrid energy rather than on strict constraint satisfaction. </plain></SENT>
<SENT sid="215" pm="."><plain>That is, there is always a phase where the algorithm tries to find a trade-off when inconsistencies exist between constraints. </plain></SENT>
<SENT sid="216" pm="."><plain>The optimization thus produces solutions in which chemical and NMR constraints are optimized, but in which small violations are always present. </plain></SENT>
<SENT sid="217" pm="."><plain>These inconsistencies are present in any structure determination, in particular because distance constraints are imprecise, due to experimental limitations. </plain></SENT>
</text></p><p><text><SENT sid="218" pm="."><plain>Since the data in the PDB for the examples presented here were not pre-processed the way our algorithm requires, we decided to use a subset of the stored data sets: the definition of α-helix regions and a few long-range distance constraints arbitrary selected from the set of NMR constraints for structures with more than one α-helix. </plain></SENT>
<SENT sid="219" pm="."><plain>In order to further reduce the risk of all solutions being pruned, we used tolerance values for atomic positions and angles between atoms (Table 2). Table 2 Analysis of conformations obtained by the branch-and-pruning algorithm on the three proteins targets: 2JMY, 2KXA and 2KSL  Proteins  2JMY  2JMY_1  2JMY_2  2KXA  2KSL Number ofresidues1515152451Number ofvertices107107107170359Definitionof α helices1-153-135-111-11, 13-234-11, 13-27,29-36, 41-50Positiontolerance (Å)0.20.20.20.20.2Angletolerance (°)22244 b value44484Number oflong-rangeconstraints00013Number of savedconformations110000100001000010000Number of generatedconformations1633,937928,3993,380,964491,498CPU time-1 min1 min25 min31 minNumber of violatedconstraints (&gt; 1Å)04.0 ± 2.111.6 ± 3.69.6 ± 2.912.8 ± 1.1Maximumviolation (Å)03.3 ± 1.44.8 ± 0.73.7 ± 1.08.1 ± 0.6Mininum RMSDfrom PDB structure (Å)1.41.32.11.13.0RMSD from PDB structurefor minimum violatedconformations (Å)1.42.92.81.33.5PROCHECKcore residues (%)10065.7 ± 25.949.2 ± 7.660.4 ± 8.176.9 ± 2.4allowed residues (%)017.9 ± 9.740.9 ± 8.339.6 ± 8.021.3 ± 2.8gen.allow. residues (%)03.6 ± 4.89.9 ± 7.20.0 ± 0.01.9 ± 1.7disall. residues (%)00.0 ± 0.00.0 ± 0.00.0 ± 0.00.0 ± 0.02JMY_1 and 2JMY_2 correspond to the target 2JMY with shorter definitions of α helices. </plain></SENT>
<SENT sid="220" pm="."><plain>The total number of generated conformations is given, along with the number conformations filtered according to RMSD values. </plain></SENT>
</text></p><p><text><SENT sid="221" pm="."><plain>The three examples we chose to illustrate the algorithm display an increasing structural complexity: (i) a single α helix, corresponding to the structure of peptide CM15 determined in micelles (PDB id: 2JMY [58]), (ii) an α helical hairpin (PDB id: 2KXA [59]), (iii) the insecticidial toxin TAITX-1a, formed as a bundle of four α helices, restrained by three disulphide bridges (PDB id: 2KSL). </plain></SENT>
<SENT sid="222" pm="."><plain>The main characteristics of the studied proteins are given in Table 2. </plain></SENT>
<SENT sid="223" pm="."><plain>All three examples were originally determined by NMR spectroscopy, and the corresponding constraint lists are available from the PDB. </plain></SENT>
<SENT sid="224" pm="."><plain>The analysis by PROCHECK [60] of the Ramachandran diagram of these three PDB structures shows that more than 85% of the residues are located in the core region. </plain></SENT>
<SENT sid="225" pm="."><plain>For 2KXA and 2KSL, more than 95% of the residues are located in the core and allowed region, whereas in 2JMY, 7% of the residues are located in the generously allowed region. </plain></SENT>
<SENT sid="226" pm="."><plain>For 2KXA, one PRO residue was replaced by an ALA, as the PRO cycle has not yet been included in the current version of the iBP algorithm. </plain></SENT>
</text></p><p><text><SENT sid="227" pm="."><plain>We generated conformations using the branching phase and the pruning devices described above. </plain></SENT>
<SENT sid="228" pm="."><plain>The long-range constraints added for the calculations of 2KXA and 2KSL, are: for 2KXA, one constraint between H α hydrogen and carbonyl oxygen of Ala-5 and Met-17, enforcing the pairing of the two α-helices,for 2KSL, three constraints between Carbons β of Cys-7 and Cys-37, of Cys-23 and Cys-33 and of Cys-26 and Cys-46, corresponding to the formation of the three disulphide bridges. </plain></SENT>
</text></p><p><text><SENT sid="229" pm="."><plain>For all calculations, except the one of 2JMY with the α helix defined along the whole sequence, the obtained conformations were filtered according to the coordinate root mean-squared deviation (RMSD: 1.5 Å) with respect to the previously obtained conformation in the iBP procedure. </plain></SENT>
<SENT sid="230" pm="."><plain>Enforcing an RMSD value larger than 1.5 Å between two successively stored conformations, avoids an oversampling of the conformational space. </plain></SENT>
<SENT sid="231" pm="."><plain>Each calculation was stopped after storing 10000 filtered conformations. </plain></SENT>
<SENT sid="232" pm="."><plain>For our three examples, five calculations were performed in total: three on 2JMY with different definitions of the α helix (residues 1-15, 3-13 and 5-11), and one each for 2KXA and 2KSL. </plain></SENT>
<SENT sid="233" pm="."><plain>For the first calculation on 2JMY, one conformation was obtained and saved. </plain></SENT>
<SENT sid="234" pm="."><plain>The second and third calculations on 2JMY were quite short, of the order of minutes (Table 2), which is due to the small size of the corresponding tree. </plain></SENT>
<SENT sid="235" pm="."><plain>For the 2KXA and 2KSL calculations, 10000 conformations were obtained in about 30 mins of calculation. </plain></SENT>
<SENT sid="236" pm="."><plain>Large total numbers of conformations were generated: this number increases from ∼634,000 (2JMY_1) up to ∼3,400,000 (2KXA) with the size of the considered problem, depending on the number of residues and on the number of constraints. </plain></SENT>
<SENT sid="237" pm="."><plain>Despite 2KSL being the largest example, the second smallest number of conformations was generated, which is the sign of a severe pruning arising from a rather restricted conformational space. </plain></SENT>
</text></p><p><text><SENT sid="238" pm="."><plain>The reliability of the obtained conformations was checked in three ways. </plain></SENT>
<SENT sid="239" pm="."><plain>First, the whole set of NMR constraints deposited along with the PDB entries and involving backbone hydrogens, were probed on the conformations. </plain></SENT>
<SENT sid="240" pm="."><plain>Second, the quality of the obtained conformations was checked using PROCHECK [60] analysis of the Ramachandran plot. </plain></SENT>
<SENT sid="241" pm="."><plain>Third, the obtained conformations were clustered with an unsupervised clustering method, namely the self-organizing map or SOM [61-64], in order to investigate the properties of sampled conformations. </plain></SENT>
</text></p><p><text><SENT sid="242" pm="."><plain>The agreement of the obtained conformations with the backbone NMR constraints deposited with the PDB structures was checked by calculating the distances between the backbone hydrogens in each obtained conformation. </plain></SENT>
<SENT sid="243" pm="."><plain>The distances larger than the upper bound of the constraint correspond to violations of this constraint. </plain></SENT>
<SENT sid="244" pm="."><plain>The mean number of violated constraints along with the mean value of the difference to the upper bound for these constraints were calculated on all conformations (Table 2). </plain></SENT>
<SENT sid="245" pm="."><plain>For the 2JMY calculation with the 1-15 α helix definition, no violation of the NMR constraints could be observed. </plain></SENT>
<SENT sid="246" pm="."><plain>As expected, when the α helix definition is reduced (2JMY_1 and 2JMY_2), the average number of violations increases as well as the average maximum violation. </plain></SENT>
<SENT sid="247" pm="."><plain>Not surprisingly, the most violated constraints involve residues located at the N and C terminal parts of the α-helix, TRP-2, PHE-5, LYS-3, LYS-6 and VAL-11, VAL-14, LEU-15 for 2JMY_1 and 2JMY_2. </plain></SENT>
<SENT sid="248" pm="."><plain>The largest violations and number of violations are of the same order or value for 2KXA than for 2JMY_1 and 2JMY_2. </plain></SENT>
<SENT sid="249" pm="."><plain>In contrast, the largest violations and number of violations are observed for 2KSL and involve residues CYS-33, GLU-34, PHE-38, TYR-43. </plain></SENT>
<SENT sid="250" pm="."><plain>Such over-restraining of NMR structures have been put in evidence in the past, through molecular dynamics simulations [65] and analysis of the structure quality [66]. </plain></SENT>
</text></p><p><text><SENT sid="251" pm="."><plain>The average number of violations is similar for 2JMY_2, 2KXA and 2KSL, but the average maximum violation for 2KSL is twice as large as that for 2JMY_2 and 2KXA. </plain></SENT>
<SENT sid="252" pm="."><plain>This might be due to the very restrained conformations of 2KSL, which contain three disulphide bridges. </plain></SENT>
<SENT sid="253" pm="."><plain>Due to this restrained conformation, the NMR constraint list is probably more prone to contain inconsistencies, and large mechanical strain can be stored in the structure if one uses an optimization procedure such as simulated annealing. </plain></SENT>
<SENT sid="254" pm="."><plain>In contrast, no mechanical strain whatsoever is generated by the iBP algorithm, and the obtained conformations might have a stronger tendency to deviate from the PDB conformations. </plain></SENT>
</text></p><p><text><SENT sid="255" pm="."><plain>For each example, the obtained conformations were compared to the first conformation deposited in the PDB. </plain></SENT>
<SENT sid="256" pm="."><plain>Minimum RMSD values in the range 1.1-2.1 Å were obtained for all targets, except 2KSL for which the minimum RMSD value was 3.0 Å. </plain></SENT>
<SENT sid="257" pm="."><plain>Thus the Branch-and-Prune algorithm was able to capture conformations close to the PDB conformations, the larger value obtained for 2KSL arising from the larger mechanical strain quoted above. </plain></SENT>
</text></p><p><text><SENT sid="258" pm="."><plain>For each calculation, the conformation displaying the smallest number of NMR constraint violations was compared to the first conformation deposited in the PDB. </plain></SENT>
<SENT sid="259" pm="."><plain>The RMSD values are smaller than 1.5 Å for 2JMY and 2KXA. </plain></SENT>
<SENT sid="260" pm="."><plain>This shows that, in the context of the iBP algorithm, the measured NMR constraints also push the structure toward the PDB structure. </plain></SENT>
<SENT sid="261" pm="."><plain>For 2JMY_1 and 2JMY_2, the RMSD value increases since the definition of the α helical region is shorter. </plain></SENT>
<SENT sid="262" pm="."><plain>For 2KSL, the conformation displaying the smallest number of constraint violations, displays an RMSD of 3.5Å with the PDB first conformation, which agrees with the maximum number of violations observed for this protein and with the minimum RMSD with the PDB structure analyzed above. </plain></SENT>
</text></p><p><text><SENT sid="263" pm="."><plain>From the PROCHECK [60] analysis, the percentage of residues located in core and allowed Ramachandran regions, is larger than 95% for all targets except 2JMY_1, 2JMY_2, for which the percentages are about 80% due to the reduced definition of the α helix. </plain></SENT>
<SENT sid="264" pm="."><plain>For all targets, the percentage of residues in disallowed regions is equal to zero. </plain></SENT>
<SENT sid="265" pm="."><plain>The relatively important percentage of residues located in the allowed region may arise from the systematic exploration performed by the Branch-and-Prune algorithm, the strict nature of the constraints, and the nature of the pruning devices. </plain></SENT>
</text></p><p><text><SENT sid="266" pm="."><plain>In order to further probe the robustness of the proposed algorithm, iBP calculations on 2KXA and 2KSL have been performed, using input data degraded in the following way: (i) the length of each α helix has been reduced by 1 residues at each extremity, (ii) the lower and upper bounds of the long-range distance constraints have been increased by 0.5 Å. </plain></SENT>
<SENT sid="267" pm="."><plain>The introduction of this noise into the α helical and long-range constraints makes the iBP solution moving apart from the PDB structure, as the minimum RMSD to PDB structure changes from 1.1 to 2 Å for 2KXA, and from 3.0 to 4.3 Å for 2KSL. </plain></SENT>
<SENT sid="268" pm="."><plain>Nevertheless, the quality of the Ramachandran diagram remains satisfying, with 93.3% and 95.4% of the residues located in the core and allowed regions of the Ramachandran plot for 2KXA and 2KSL. </plain></SENT>
</text></p><p><text><SENT sid="269" pm="."><plain>The conformations were clustered using a self-organizing map (SOM) approach [62,63], on which the coordinate RMSD values between the conformers obtained by Branch-and-Prune and the corresponding PDB structure, were projected on the SOMs (Figure 6). </plain></SENT>
<SENT sid="270" pm="."><plain>These RMSD values lay in the 1.3-3.2 Å range for 2JMY_1, in the 2.4-4.9 Å range for 2JMY_2, in the 1.5-4.0 Å range for 2KXA, and in the 3.2-6.0 Å for 2KSL. Figure 6 Clustering of the conformations obtained by the i BP algorithm. Self-organizing maps describing the clustering of the conformations obtained by the iBP algorithm on 2JMY, 2KXA and 2KSL. </plain></SENT>
<SENT sid="271" pm="."><plain>The contour plots (lines) represent the local similarity between the clustered conformations. </plain></SENT>
<SENT sid="272" pm="."><plain>The color scales (on plot left) extend from blue to red (from very similar to very dissimilar conformations). </plain></SENT>
<SENT sid="273" pm="."><plain>The small red points are drawn on the SOM neuron for which the largest local similarity is observed between conformations. </plain></SENT>
<SENT sid="274" pm="."><plain>Each SOM neuron is colored according to the average value of the coordinates RMSD of the neuron conformations with respect to the PDB structure. </plain></SENT>
<SENT sid="275" pm="."><plain>The color scales extend (on plot right) from purple to green (from very similar to very dissimilar to the PDB structure). </plain></SENT>
<SENT sid="276" pm="."><plain>The similarity between SOM neurons as well as the RMSD to the PDB structure are expressed in Å for comparison purposes. </plain></SENT>
</text></p><p><text><SENT sid="277" pm="."><plain>In the SOMs for the four calculations (Figure 6), the RMSD values are colored according to their RMSD from the PDB entry, violet color indicating values smaller than the median value of the sampled RMSD value, green color indicating RMSD values larger than this median value. </plain></SENT>
<SENT sid="278" pm="."><plain>For 2JMY_1, 2KXA and 2KSL, a larger number of neurons of the SOMs belongs to the second group, which is the sign of an enhanced sampling of the conformational space with respect to the region sampled by simulated annealing. </plain></SENT>
<SENT sid="279" pm="."><plain>For 2JMY_2, the inverse picture is observed, which may arise from the more limited conformational space available to be sampled for a unique α-helix. </plain></SENT>
</text></p><p><text><SENT sid="280" pm="."><plain>In 2KSL and 2KXA SOMs, the protein conformations corresponding to the region displaying the smallest coordinate RMSD values with respect to the PDB structure, were extracted (Figure 7). </plain></SENT>
<SENT sid="281" pm="."><plain>These sets of conformers are similar to the superimposed conformations obtained in a usual NMR calculation. Figure 7 Superimposed 2KXA and 2KSL conformations. Superimposition of 2KXA and 2KSL conformations extracted from the SOM, as the ones displaying the minimum coordinates RMSD with respect to the first conformer of the corresponding PDB structures. </plain></SENT>
<SENT sid="282" pm="."><plain>The N and C terminal extremities are labeled, and the conformations, drawn in cartoon, are colored from blue to red, according to the conformational index. </plain></SENT>
</text></p></sec></SecTag><SecTag type="CONCL"><sec id="Sec16" sec-type="conclusion"><title><text><SENT sid="283" pm="."><plain>Conclusions </plain></SENT>
</text></title><p><text><SENT sid="284" pm="."><plain>We proposed here a Branch-and-Prune algorithm (iBP) to solve the Distance Geometry Problem, in order to sample exhaustively the conformational space of the backbone of α-helical proteins. </plain></SENT>
<SENT sid="285" pm="."><plain>The iBP algorithm bears a very slight reminiscence to variable target function approaches for example implemented in DISMAN [67], due to the sequential nature of introducing constraints and non-bonded interactions. </plain></SENT>
<SENT sid="286" pm="."><plain>However, the precise way of introducing the constraints and non-bonded interactions differs significantly, and DISMAN does not systematically search space but is an optimization approach. </plain></SENT>
</text></p><p><text><SENT sid="287" pm="."><plain>We introduced new pruning devices integrated in the iBP algorithm for DGP with intervals and we tested our iBP implementation on the backbones of α-helical proteins. </plain></SENT>
<SENT sid="288" pm="."><plain>Several pruning devices have been designed to enforce amino-acid chirality, α-helix geometry and van der Waals steric hindrance. </plain></SENT>
<SENT sid="289" pm="."><plain>The algorithm allowed to efficiently reconstruct backbone conformations of three α-helical peptides, of various sizes, and for which the structure were previously solved by NMR. </plain></SENT>
<SENT sid="290" pm="."><plain>The obtained solutions satisfy most of the NMR constraints involving backbone hydrogen bonds, and display very acceptable Ramachandran statistics. </plain></SENT>
<SENT sid="291" pm="."><plain>The present work represents a first successful step on the way to reconstruct protein structures using a branch-and-prune algorithm applied to the Distance Geometry problem. </plain></SENT>
</text></p><p><text><SENT sid="292" pm="."><plain>Applications where this approach could have significant advantages are cases where there are few distances defining the tertiary structure of a protein, where it is important to characterize the space of all solutions. </plain></SENT>
<SENT sid="293" pm="."><plain>It might also be useful as part iterative automated assignment algorithms such as ARIA [68], CYANA [69] or UNIO [70], where in a first iteration all solutions compatible with a few unambiguous long-range constraints could be generated to reduce the ambiguity of the remaining constraints. </plain></SENT>
<SENT sid="294" pm="."><plain>Another application of the approach proposed here would be to provide input molecular conformations to model the structure of multi-subunit complexes into an electron microscopy density map [71]. </plain></SENT>
</text></p><p><text><SENT sid="295" pm="."><plain>Some limitations of the current version of iBP prevent for the moment its use with real nuclear Overhauser effect (NOE) data. </plain></SENT>
<SENT sid="296" pm="."><plain>These limitations are the use of unambiguous distance constraints, the non-inclusion of protein side-chains, the loss of information intervals and the appropriate weighting of the various constraints in order to overcome the inconsistencies contained among the whole constraint set. </plain></SENT>
<SENT sid="297" pm="."><plain>Protein side-chains can be added to the protein backbone afterward. </plain></SENT>
<SENT sid="298" pm="."><plain>The discretization of circle arcs could be tackled using algebraic geometry and geometric algebra approaches [72]. </plain></SENT>
<SENT sid="299" pm="."><plain>The Bayesian approach [73] developed for the objective weighting of various NMR contraints according to the data quality could be used to alleviate the inconsistency problems. </plain></SENT>
<SENT sid="300" pm="."><plain>The use of unambiguous distance constraints is probably the most unavoidable aspect of the current set-up of the algorithm. </plain></SENT>
</text></p></sec></SecTag></body><back><fn-group><fn><p><text><SENT sid="301" pm="."><plain>Competing interests </plain></SENT>
</text></p><p><text><SENT sid="302" pm="."><plain>The authors declare that they have no competing interests. </plain></SENT>
</text></p></fn><fn><p><text><SENT sid="303" pm="."><plain>Authors’ contributions </plain></SENT>
</text></p><p><text><SENT sid="304" pm="."><plain>AC, TM, MN, LL and AM designed the work. </plain></SENT>
<SENT sid="305" pm="."><plain>AC implemented the algorithm. </plain></SENT>
<SENT sid="306" pm="."><plain>TM, GB and BB performed and analyzed the application cases. </plain></SENT>
<SENT sid="307" pm="."><plain>AC, BB, AM, LL, CL, RA, MN and TM wrote the manuscript. </plain></SENT>
<SENT sid="308" pm="."><plain>All authors read and approved the final manuscript. </plain></SENT>
</text></p></fn></fn-group><SecTag type="ACK_FUND"><ack><p><text4fund><text><SENT sid="309" pm="."><plain>TM, MN, BB thank the Institut Pasteur and the CNRS for support. </plain></SENT>
<SENT sid="310" pm="."><plain>This work was funded by the European Union (FP7-IDEAS-ERC 294809 to MN), the “investissement d’avenir” program (grant bip:bip to MN and LL), and the Brazilian Research Agencies FAPESP and CNPq (to CL and RA). </plain></SENT>
</text></text4fund></p></ack></SecTag><SecTag type="REF"><ref-list id="Bib1"><title>References</title><ref id="CR1"><text><SENT sid="311" pm="."><plain>1HuangXBrittoMKear-ScottJBooneCRoccaJSimmerlingCThe role of select subtype polymorphisms on HIV-1 protease conformational sampling and dynamicsJ Biol Chem2014289172031410.1074/jbc.M114.57183624742668 </plain></SENT>
</text></ref><ref id="CR2"><text><SENT sid="312" pm="."><plain>2KanelisVForman-KayJKayLMultidimensional NMR methods for protein structure determinationIUBMB Life20015229130210.1080/15216540131729114711895078 </plain></SENT>
</text></ref><ref id="CR3"><text><SENT sid="313" pm="."><plain>3SinzAChemical cross-linking and mass spectrometry for mapping three-dimensional structures of proteins and protein complexesJ Mass Spectrometry20033812253710.1002/jms.559 </plain></SENT>
</text></ref><ref id="CR4"><text><SENT sid="314" pm="."><plain>4Marti-RenomMStuartAFiserASánchezRMeloFSaliAComparative protein structure modeling of genes and genomesAnnu Rev Biophys Biomol Struct20002929132510.1146/annurev.biophys.29.1.29110940251 </plain></SENT>
</text></ref><ref id="CR5"><text><SENT sid="315" pm="."><plain>5VajdaSKozakovDConvergence and combination of methods in protein-protein dockingCurr Opin Struct Biol2009191647010.1016/j.sbi.2009.02.00819327983 </plain></SENT>
</text></ref><ref id="CR6"><text><SENT sid="316" pm="."><plain>6BelloMMartínez-ArchundiaMCorrea-BasurtoJAutomated docking for novel drug discoveryExpert Opin Drug Discovery201388213410.1517/17460441.2013.794780 </plain></SENT>
</text></ref><ref id="CR7"><text><SENT sid="317" pm="."><plain>7CrippenGHavelTDistance geometry and molecular conformation1988New YorkWiley </plain></SENT>
</text></ref><ref id="CR8"><text><SENT sid="318" pm="."><plain>8LibertiLLavorCMaculanNMucherinoAEuclidean distance geometry and applicationsSIAM Rev20145636910.1137/120875909 </plain></SENT>
</text></ref><ref id="CR9"><text><SENT sid="319" pm="."><plain>9NilgesMGronenbornABrüngerACloreGDetermination of three-dimensional structures of proteins by simulated annealing with interproton distance restraints. </plain></SENT>
<SENT sid="320" pm="."><plain>Application to crambin, potato carboxypeptidase inhibitor and barley serine proteinase inhibitor 2Protein Eng19882273810.1093/protein/2.1.272855369 </plain></SENT>
</text></ref><ref id="CR10"><text><SENT sid="321" pm="."><plain>10AlipanahiBKrislockNGhodsiAWolkowiczHDonaldsonLLiMDetermining protein structures from NOESY distance constraints by semidefinite programmingJ Comput Biol20132029631010.1089/cmb.2012.008923113706 </plain></SENT>
</text></ref><ref id="CR11"><text><SENT sid="322" pm="."><plain>11WangCLozano-PérezTTidorBAmbiPack: a systematic algorithm for packing of macromolecular structures with ambiguous distance constraintsProteins199832264210.1002/(SICI)1097-0134(19980701)32:1&lt;26::AID-PROT5&gt;3.0.CO;2-C9672040 </plain></SENT>
</text></ref><ref id="CR12"><text><SENT sid="323" pm="."><plain>12PotluriSYanAChouJDonaldBBailey-KelloggCStructure determination of symmetric homo-oligomers by a complete search of symmetry configuration space using nmr restraints and Van Der Waals packingProteins2006652031910.1002/prot.2109116897780 </plain></SENT>
</text></ref><ref id="CR13"><text><SENT sid="324" pm="."><plain>13PotluriSYanADonaldBBailey-KelloggCA complete algorithm to resolve ambiguity for intersubunit NOE assignment in structure determination of symmetric homo-oligomersProtein Sci200716698110.1110/ps.06242730717192589 </plain></SENT>
</text></ref><ref id="CR14"><text><SENT sid="325" pm="."><plain>14MartinJYanABailey-KelloggCZhouPDonaldBA geometric arrangement algorithm for structure determination of symmetric protein homo-oligomers from NOEs and RDCsJ Comput Biol20111815072310.1089/cmb.2011.017322035328 </plain></SENT>
</text></ref><ref id="CR15"><text><SENT sid="326" pm="."><plain>15MartinJYanABailey-KelloggCZhouPDonaldBA graphical method for analyzing distance restraints using residual dipolar couplings for structure determination of symmetric protein homo-oligomersProtein Sci2011209708510.1002/pro.62021413097 </plain></SENT>
</text></ref><ref id="CR16"><text><SENT sid="327" pm="."><plain>16ReardonPSageHDennisonSMartinJDonaldBAlamSStructure of an HIV-1-neutralizing antibody target, the lipid-bound gp41 envelope membrane proximal region trimerProc Nat Acad Sci USA20141111391610.1073/pnas.130984211124474763 </plain></SENT>
</text></ref><ref id="CR17"><text><SENT sid="328" pm="."><plain>17ZengJBoylesJTripathyCWangLYanAZhouPHigh-resolution protein structure determination starting with a global fold calculated from exact solutions to the rdc equationsJ Biomol NMR2009452658110.1007/s10858-009-9366-319711185 </plain></SENT>
</text></ref><ref id="CR18"><text><SENT sid="329" pm="."><plain>18GordonDHomGMayoSPierceNExact rotamer optimization for protein designJ Comput Chem2003242324310.1002/jcc.1012112497602 </plain></SENT>
</text></ref><ref id="CR19"><text><SENT sid="330" pm="."><plain>19KingsfordCChazelleBSinghMSolving and analyzing side-chain positioning problems using linear and integer programmingBioinformatics20052110283610.1093/bioinformatics/bti14415546935 </plain></SENT>
</text></ref><ref id="CR20"><text><SENT sid="331" pm="."><plain>20WangLDonaldBAn efficient and accurate algorithm for assigning nuclear Overhauser effect restraints using a rotamer library ensemble and residual dipolar couplings. </plain></SENT>
<SENT sid="332" pm="."><plain>The IEEE computational systems bioinformatics conference (CSB)2005Stanford, CAThe Institute of Electrical and Electronics Engineers, Inc. </plain></SENT>
</text></ref><ref id="CR21"><text><SENT sid="333" pm="."><plain>21WangLMettuRDonaldBA polynomial-time algorithm for de novo protein backbone structure determination from NMR dataJ Comput Biol200613127688 </plain></SENT>
</text></ref><ref id="CR22"><text><SENT sid="334" pm="."><plain>22O’NeilRLilienRDonaldBStroudRAndersonAPhylogenetic classification of protozoa based on the structure of the linker domain in the bifunctional enzyme, dihydrofolate reductase-thymidylate synthaseJ Biol Chem200327852980710.1074/jbc.M31032820014555647 </plain></SENT>
</text></ref><ref id="CR23"><text><SENT sid="335" pm="."><plain>23LavorCLibertiLMaculanNMucherinoAThe discretizable molecular distance geometry problemComput Optimization App2012521154610.1007/s10589-011-9402-6 </plain></SENT>
</text></ref><ref id="CR24"><text><SENT sid="336" pm="."><plain>24LavorCLibertiLMucherinoAThe interval Branch-and-Prune Algorithm for the Discretizable Molecular Distance Geometry Problem with Inexact DistancesJ Global Optimization2013568557110.1007/s10898-011-9799-6 </plain></SENT>
</text></ref><ref id="CR25"><text><SENT sid="337" pm="."><plain>25EnghRAHuberRAccurate bond and angle parameters for x-ray protein structure refinementActa Crystallogr Sect A: Found Crystallogr199147439240010.1107/S0108767391001071 </plain></SENT>
</text></ref><ref id="CR26"><text><SENT sid="338" pm="."><plain>26RocchiaWAlexovEHonigBExtending the applicability of the nonlinear poisson-boltzmann equation: Multiple dielectric constants and multivalent ionsJ Phys Chem B20011052865071410.1021/jp010454y </plain></SENT>
</text></ref><ref id="CR27"><text><SENT sid="339" pm="."><plain>27HonigBNichollsAClassical electrostatics in biology and chemistryScience199526852141144910.1126/science.77618297761829 </plain></SENT>
</text></ref><ref id="CR28"><text><SENT sid="340" pm="."><plain>28LibertiLMassonBLeeJLavorCMucherinoAOn the number of realizations of certain Henneberg graphs arising in protein conformationDiscrete Appl Mathematics20141652133210.1016/j.dam.2013.01.020 </plain></SENT>
</text></ref><ref id="CR29"><text><SENT sid="341" pm="."><plain>29CoopeIReliable computation of the points of intersection of n spheres in \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document} $\mathbb {R}^{n}$ \end{document}ℝnANZIAM Journal2000424617710.21914/anziamj.v42i0.608 </plain></SENT>
</text></ref><ref id="CR30"><text><SENT sid="342" pm="."><plain>30BergJTymoczkoJStryerLBiochemistry: International Edition2006New YorkWH Freeman &amp; Co </plain></SENT>
</text></ref><ref id="CR31"><text><SENT sid="343" pm="."><plain>31GüntertPMumenthalerCWüthrichKTorsion angle dynamics for NMR structure calculation with the new program DYANAJ Mol Biol19972732839810.1006/jmbi.1997.12849367762 </plain></SENT>
</text></ref><ref id="CR32"><text><SENT sid="344" pm="."><plain>32GüntertPWüthrichKSampling of conformation space in torsion angle dynamics calculationsComp Phys Commun20011381556910.1016/S0010-4655(01)00204-1 </plain></SENT>
</text></ref><ref id="CR33"><text><SENT sid="345" pm="."><plain>33López-MéndezBGüntertPAutomated protein structure determination from NMR spectraJ Am Chem Soc2006128131122210.1021/ja061136l17017791 </plain></SENT>
</text></ref><ref id="CR34"><text><SENT sid="346" pm="."><plain>34MucherinoALavorCMalliavinTLibertiLNilgesMMaculanNInfluence of pruning devices on the solution of molecular distance geometry problemsPardalos, P., Rebennack, S. </plain></SENT>
<SENT sid="347" pm="."><plain>(eds.) Lecture Notes in Computer Science 66302011GermanySpringer </plain></SENT>
</text></ref><ref id="CR35"><text><SENT sid="348" pm="."><plain>35DongQWuZA geometric build-up algorithm for solving the molecular distance geometry problem with sparse distance dataJ Global Optimization20032633213310.1023/A:1023221624213 </plain></SENT>
</text></ref><ref id="CR36"><text><SENT sid="349" pm="."><plain>36Lavor C, Liberti L, Mucherino A, Maculan N. </plain></SENT>
<SENT sid="350" pm="."><plain>On a discretizable subclass of instances of the molecular distance geometry problem. </plain></SENT>
<SENT sid="351" pm="."><plain>In: Proceedings of the 2009 ACM Symposium on Applied Computing. </plain></SENT>
<SENT sid="352" pm="."><plain>ACM Press: 2009. p. </plain></SENT>
<SENT sid="353" pm="."><plain>804–5. </plain></SENT>
</text></ref><ref id="CR37"><text><SENT sid="354" pm="."><plain>37FloydRWAlgorithm 97: shortest pathCommun ACM19625634510.1145/367766.368168 </plain></SENT>
</text></ref><ref id="CR38"><text><SENT sid="355" pm="."><plain>38ShenYDelaglioFCornilescuGBaxATALOS+: a hybrid method for predicting protein backbone torsion angles from NMR chemical shiftsJ Biomol NMR2009442132310.1007/s10858-009-9333-z19548092 </plain></SENT>
</text></ref><ref id="CR39"><text><SENT sid="356" pm="."><plain>39GrishaevABaxAAn empirical backbone-backbone hydrogen-bonding potential in proteins and its applications to NMR structure refinement and validationJ Am Chem Soc20041262372819210.1021/ja031999415186165 </plain></SENT>
</text></ref><ref id="CR40"><text><SENT sid="357" pm="."><plain>40KabschWSanderCDictionary of protein secondary structure: pattern recognition of hydrogen-bonded and geometrical featuresBiopolymers19832212257763710.1002/bip.3602212116667333 </plain></SENT>
</text></ref><ref id="CR41"><text><SENT sid="358" pm="."><plain>41AbrahamsDGurtovoyAC++ Template Metaprogramming: Concepts, Tools, and Techniques from Boost and Beyond2004Boston, MassachusettsAddison-Wesley Professional </plain></SENT>
</text></ref><ref id="CR42"><text><SENT sid="359" pm="."><plain>42AusternMHGeneric Programming and the STL: Using and Extending the C++ Standard Template Library1998Boston, MassachusettsAddison-Wesley Longman Publishing Co., Inc. </plain></SENT>
</text></ref><ref id="CR43"><text><SENT sid="360" pm="."><plain>43JosuttisNThe C++ Standard Library: a Tutorial and Reference1999Boston, MassachusettsAddison-Wesley Professional </plain></SENT>
</text></ref><ref id="CR44"><text><SENT sid="361" pm="."><plain>44AndersonEBaiZBischofCBlackfordSDemmelJDongarraJLAPACK Users’ Guide1999Philadelphia, PASociety for Industrial and Applied Mathematics </plain></SENT>
</text></ref><ref id="CR45"><text><SENT sid="362" pm="."><plain>45LeeL-QLumsdaineAThe Boost Graph Library: User Guide and Reference Manual2002Boston, MassachusettsAddison-Wesley Professional </plain></SENT>
</text></ref><ref id="CR46"><text><SENT sid="363" pm="."><plain>46BrönnimannHMelquiondGPionSThe design of the boost interval arithmetic libraryTheor Comput Sci20063511111810.1016/j.tcs.2005.09.062 </plain></SENT>
</text></ref><ref id="CR47"><text><SENT sid="364" pm="."><plain>47Brönnimann H, Melquiond G, Pion S. </plain></SENT>
<SENT sid="365" pm="."><plain>The boost interval arithmetic library. </plain></SENT>
<SENT sid="366" pm="."><plain>In: Proceedings of the 5th Conference on Real Numbers and Computers. </plain></SENT>
<SENT sid="367" pm="."><plain>Lyon, France: 2003. p. </plain></SENT>
<SENT sid="368" pm="."><plain>65–80. http://www.lri.fr/~melquion/doc/03-rnc5-article.ps.gz. </plain></SENT>
</text></ref><ref id="CR48"><text><SENT sid="369" pm="."><plain>48Saxe J. </plain></SENT>
<SENT sid="370" pm="."><plain>Embeddability of weighted graphs in k-space is strongly NP-hard. </plain></SENT>
<SENT sid="371" pm="."><plain>Proc 17th Allerton Conference Commun Control Comput. </plain></SENT>
<SENT sid="372" pm="."><plain>Monticello, Illinois; 1979:480-9. </plain></SENT>
</text></ref><ref id="CR49"><text><SENT sid="373" pm="."><plain>49LibertiLLavorCMaculanNA branch-and-prune algorithm for the molecular distance geometry problemInt Trans Operational Res2008151710.1111/j.1475-3995.2007.00622.x </plain></SENT>
</text></ref><ref id="CR50"><text><SENT sid="374" pm="."><plain>50LavorCMucherinoALibertiLMaculanNOn the computation of protein backbones by using artificial backbones of hydrogensJ Global Optimization2011503294410.1007/s10898-010-9584-y </plain></SENT>
</text></ref><ref id="CR51"><text><SENT sid="375" pm="."><plain>51CostaVMucherinoALavorCCassioliACarvalhoLMaculanNDiscretization orders for protein side chainsJ Global Optimization2014603334910.1007/s10898-013-0135-1 </plain></SENT>
</text></ref><ref id="CR52"><text><SENT sid="376" pm="."><plain>52LavorCLibertiLMaculanNMucherinoAThe discretizable molecular distance geometry problemComput Optimization App2012521154610.1007/s10589-011-9402-6 </plain></SENT>
</text></ref><ref id="CR53"><text><SENT sid="377" pm="."><plain>53LibertiLLavorCMucherinoAThe discretizable molecular distance geometry problem seems easier on proteinsMucherino A, Lavor C, Liberti L, Maculan N (eds.) Distance Geometry: Theory, Methods, and Applications2013New YorkSpringer </plain></SENT>
</text></ref><ref id="CR54"><text><SENT sid="378" pm="."><plain>54Cassioli A, Günlük O, Lavor C, Liberti L. </plain></SENT>
<SENT sid="379" pm="."><plain>Discretization vertex orders for distance geometry. </plain></SENT>
<SENT sid="380" pm="."><plain>Discrete Applied Mathematics (accepted). in press. </plain></SENT>
</text></ref><ref id="CR55"><text><SENT sid="381" pm="."><plain>55LibertiLMassonBLavorCLeeJMucherinoAOn the number of realizations of certain Henneberg graphs arising in protein conformationDiscrete Appl Mathematics20141652133210.1016/j.dam.2013.01.020 </plain></SENT>
</text></ref><ref id="CR56"><text><SENT sid="382" pm="."><plain>56LavorCLeeJLee-St. JohnALibertiLMucherinoASviridenkoMDiscretization orders for distance geometry problemsOptimization Lett201267839610.1007/s11590-011-0302-6 </plain></SENT>
</text></ref><ref id="CR57"><text><SENT sid="383" pm="."><plain>57BermanHKleywegtGNakamuraHMarkleyJThe future of the Protein Data BankBiopolymers2013992182210.1002/bip.2213223023942 </plain></SENT>
</text></ref><ref id="CR58"><text><SENT sid="384" pm="."><plain>58RespondekMMadlTGöblCGolserRZanggerKMapping the orientation of helices in micelle-bound peptides by paramagnetic relaxation wavesJ Am Chem Soc200712952283410.1021/ja069004f17397158 </plain></SENT>
</text></ref><ref id="CR59"><text><SENT sid="385" pm="."><plain>59LorieauJLouisJBaxAThe complete influenza hemagglutinin fusion domain adopts a tight helical hairpin arrangement at the lipid: water interfaceProc Nat Acad Sci USA201010711341610.1073/pnas.100614210720534508 </plain></SENT>
</text></ref><ref id="CR60"><text><SENT sid="386" pm="."><plain>60LaskowskiRMacArthurMMossDThorntonJPROCHECK: a program to check the stereochemical quality of protein structureJ Appl Crystallogr1993262839110.1107/S0021889892009944 </plain></SENT>
</text></ref><ref id="CR61"><text><SENT sid="387" pm="."><plain>61Bouvier G, Desdouits N, Ferber M, Blondel A, Nilges M. </plain></SENT>
<SENT sid="388" pm="."><plain>An automatic tool to analyze and cluster macromolecular conformations based on Self-Organizing Maps. </plain></SENT>
<SENT sid="389" pm="."><plain>Bioinformatics. </plain></SENT>
<SENT sid="390" pm="."><plain>2015. in press. </plain></SENT>
</text></ref><ref id="CR62"><text><SENT sid="391" pm="."><plain>62MiriLBouvierGKettaniAMikouAWakrimLNilgesMStabilization of the integrase-DNA complex by Mg2+ ions and prediction of key residues for binding HIV-1 integrase inhibitorsProteins2014824667810.1002/prot.2441224038133 </plain></SENT>
</text></ref><ref id="CR63"><text><SENT sid="392" pm="."><plain>63BouvierGDuclert-SavatierNDesdouitsNMeziane-CherifDBlondelACourvalinPFunctional motions modulating VanA ligand binding unraveled by self-organizing mapsJ Chem Inf Model20145428930110.1021/ci400354b24397493 </plain></SENT>
</text></ref><ref id="CR64"><text><SENT sid="393" pm="."><plain>64KohonenTSelf-organizing Maps2001Heidelberg, GermanySpringer </plain></SENT>
</text></ref><ref id="CR65"><text><SENT sid="394" pm="."><plain>65FanHMarkARelative stability of protein structures determined by X-ray crystallography or NMR spectroscopy: a molecular dynamics simulation studyProteins2003531112010.1002/prot.1049612945054 </plain></SENT>
</text></ref><ref id="CR66"><text><SENT sid="395" pm="."><plain>66NabuursSSpronkCVuisterGVriendGTraditional biomolecular structure determination by NMR spectroscopy allows for major errorsPLoS Computional Biol20062910.1371/journal.pcbi.0020009 </plain></SENT>
</text></ref><ref id="CR67"><text><SENT sid="396" pm="."><plain>67BraunWGōNCalculation of Protein Conformations by Proton-Proton Distance Constraints: A New Efficient AlgorithmJ Mol Biol19851866112610.1016/0022-2836(85)90134-22419572 </plain></SENT>
</text></ref><ref id="CR68"><text><SENT sid="397" pm="."><plain>68RiepingWHabeckMBardiauxBBernardAMalliavinTNilgesMARIA2: automated NOE assignment and data integration in NMR structure calculationBioinformatics200723381210.1093/bioinformatics/btl58917121777 </plain></SENT>
</text></ref><ref id="CR69"><text><SENT sid="398" pm="."><plain>69GuntertPAutomated NMR structure calculation with CYANAMethods Mol Biol20042783537815318003 </plain></SENT>
</text></ref><ref id="CR70"><text><SENT sid="399" pm="."><plain>70GuerryPHerrmannTComprehensive automation for NMR structure determination of proteinsMethods Mol Biol20128314295110.1007/978-1-61779-480-3_2222167686 </plain></SENT>
</text></ref><ref id="CR71"><text><SENT sid="400" pm="."><plain>71LaskerKSaliAWolfsonHDetermining macromolecular assembly structures by molecular docking and fitting into a electron density mapProteins20107832051110.1002/prot.2284520827723 </plain></SENT>
</text></ref><ref id="CR72"><text><SENT sid="401" pm="."><plain>72Lavor C, Alves R, Figueiredo W, Petraglia A, Maculan N. </plain></SENT>
<SENT sid="402" pm="."><plain>Clifford Algebra and the discretizable molecular distance geometry problem. </plain></SENT>
<SENT sid="403" pm="."><plain>Adv Appl Clifford Algebras. </plain></SENT>
<SENT sid="404" pm="."><plain>2015. in press. </plain></SENT>
</text></ref><ref id="CR73"><text><SENT sid="405" pm="."><plain>73BernardAVrankenWBardiauxBNilgesMMalliavinTBayesian estimation of NMR restraint potential and weight: a validation on a representative set of protein structuresProteins20087915253710.1002/prot.22980 </plain></SENT>
</text></ref></ref-list></SecTag></back></article>
